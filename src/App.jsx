import { useState } from "react";

const App = () => {
  // create state variables for password input
  const [passWordLength, setPassWordLength] = useState(8)
  // create state variables for checkbox
  const [upperCase, setUpperCase] = useState(true)
  const [lowerCase, setLowerCase] = useState(true)
  const [numbers, setNumbers] = useState(true)
  const [symbols, setSymbols] = useState(true)
  // create password  variable for user entered value in input field @ passWordLength to getting stored in final output
  const[passWord,setPassword]=useState("");
// create component  for generate the different different values from state variables   but that before we want to create state variables for those four checkboxes
  const generateRandomPassword =()=>{
    // here we create one empty variable for stored state variables values and pushed into that one variable ,
    let charSet=""
    if(upperCase)charSet += "ABCDEFGHIJKLMNOPQRSTUVWXUZ"
    if(lowerCase)charSet +="abcdefghijklmnopqrstuvwxyz"
    if(numbers)charSet += "0123456789"
    if(symbols) charSet +="!@#$%^&*()_+{}|\"'?/;:.<,>~`"

// here we need to create one more empty variable for storing the index value of automated generated values 
    let generatedPassword =""
    // use looping method to create diff diff value and getting new index values from that
    for (let i = 0; i < passWordLength; i++) {
      // here math method created and multiplied with charset variable length  and stored to randomIndexValue variable 
      let randomIndexValue = Math.floor(Math.random()*charSet.length);
      // here what we gonna do this , pushed found the index values of charset and put generatedPassword variable
      generatedPassword +=charSet[randomIndexValue]
    }
    // here that generatedPassword value set into  setPassword ();
setPassword(generatedPassword)
  };

// component created for copy the code which is generated by user
  const copyClipBoard =()=>{
    navigator.clipboard.writeText(passWord);
    alert("passWord Copied")
  };
  return (

    <>
      <div className="Password-generator">
        <div className="header">
          <h1>Strong_Password_Generator</h1>
        </div>
        <div className="input-box-one">
          <label htmlFor="lengthy-password" className="lengthy-password"> Password : </label>
          <input value={passWordLength} onChange={(e)=>{
setPassWordLength(parseInt(e.target.value))
          }} type="number" id="lengthy-password" />
        </div>
        <div className="input-box">
          <input className="upper" checked={upperCase} type="checkbox" id="UpperCase" onChange={(e)=>{
setUpperCase(e.target.checked)
          }} />
          <label htmlFor="UpperCase" > Include Upper Case  </label>
        </div>
        <div className="input-box">
          <input className="lower" checked={lowerCase}  onChange={(e)=>{
setLowerCase(e.target.checked)
          }} type="checkbox" id="lowerCase" />
          <label htmlFor="lowerCase" > Include Lower Case  </label>
        </div>
        <div className="input-box">
          <input className="num" checked={numbers}  onChange={(e)=>{
setNumbers(e.target.checked)
          }} type="checkbox" id="numbers" />
          <label htmlFor="numbers" > Include Numbers  </label>
        </div>
        <div className="input-box">
          <input className="symbol" checked={symbols}  onChange={(e)=>{
setSymbols(e.target.checked)
          }} type="checkbox" id="Symbols" />
          <label htmlFor="Symbols" > Include Symbols </label>
        </div>
        <div className="btn-box">
          <button onClick={generateRandomPassword} className="Gp-btn">Generate Password</button>
        </div>
        <div className="btn-box">
          <button className="copy-btn" onClick={copyClipBoard}>Copy</button>
          <input value={passWord} className="btn-input" type="text" readOnly />
        </div>
      </div>
    </>
  );
}

export default App;